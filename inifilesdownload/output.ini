;# This section covers the settings for logging information for the Euronext Derivatives Market Data Feed Handler processes.
;# Defines the severity level threshold that the messages having severity equal or above are logged in the Euronext Derivatives Market Data Feed Handler plug-in log files
;# range = info;trace;debug
;# Defines whether the millisecond level information logging functionality is enabled for the Euronext Derivatives Market Data Feed Handler
;# range = 0 or 1
NESRINE
tayssir33
;# This section covers settings for logging statistics for Euronext Cash Market Data Feed Handler functions.
;# Defines the frequency in seconds at which the client statistics are sent as output to the log file.
;# Defines the frequency in seconds at which the source feed statistics are sent as output to the log file.
;# Defines the frequency in seconds at which the Market Data Feed Handler plug-in writes the exchange statistics for each thread into the log file.
;# 0 means deactivating tracing these statistics in the log file.
;# It is recommended to set the ExchangeStatisticsFrequencyInSeconds parameter to 60
;# Defines the maximum data bytes that can be sent to all clients per second
;# when clients are requesting snapshot resynchronization or restarts, on a segment.
;# If this limit is reached for a specific client, the processing shifts
;# to the other client requests before returning back to the specific client.
;# This parameter is used for preventing network saturation and application overload
;# It applies to the sum of all bytes sent to all clients.
;# 0 means infinite
;# It is recommended to set NbRestartBytesPerSec = 200000
;# This section covers parameters applicable to all the plug-ins that are supported by the Market Data Server.
;# Defines the file path of the dynamic library file of the Euronext Cash Market Data Feed Handler plug-in to be loaded by the Market Data Server Core.
;# Defines whether the Market Data Server Core and its associated plugins access the same instrument in the different threads.
;# This parameter should be set to 1
;# range = 1
;# Defines whether the Market Data Server Core and its associated plugins insert new instruments in one thread while looking them up another thread.
;# This parameter should be set to 1
;# range = 1
;# This section covers the locations of the license file and the licsym.ini file.
;# Defines the file path of the license file.
;# Defines the directory path of the licsym.ini file.
;# This section covers parameters applicable to the client of the Market Data Server.
;#Defines the IP address of the P3 to which to connect in order to accept logical connections from the client.
;#Define the P3 port to which the MDS Core Engine connects.
;# Defines the type of socket that is used to connect to the P3.
;# If set to D, the Distant IP socket is used to connect to the P3.
;# If set to L, the Local or UNIX socket is used to connect to the P3.
;# range = D,L
;# Defines the listen port that accepts client connections.
;# Defines the Global Network node of the Market Data Server. This node is used for multiple client connections.
;# Defines the Global Network sub-node of the Market Data Server. This sub-node is used for multiple client connections.
;# Defines the maximum number of simultaneous clients that the Market Data Server can support.
;# Defines the maximum timeout in milliseconds to wait before flushing out the output to the client. The default is now 100 micro-seconds - see the FlushTimeoutInMicroSeconds parameter.
;# Similar to the FlushTimeout parameter, but allows the timeout to be specified in micro seconds rather than milliseconds.
;# Defines the size in bytes of the maximum Global Network frame that can be sent to a client at a time.
;# range = 1000-62000
;# Defines whether to disable all message concatenation i.e. the FlushTimeout and MaxOutputFrameSize parameters are ignored and all messages are immediately sent to the client application.
;# It is not recommended to set this parameter to 1 as it can affect performance due to an increase in number of messages delivered to clients.
;# range = 0 or 1
;# Defines the maximum number of clients that the Market Data Server Core serves simultaneously.
;# This section covers the queue buffer used between the thread handling the exchange messages and the thread dispatching them to subscribed clients.
;# Defines the size in megabytes of the queue buffer in which the Euronext Cash Market Data Server stores temporarily the processed exchange messages before dispatching them to subscribed clients.
;# Defines the maximum number of queue buffers allocated by the Market Data Server to write to clients.
;# 0 means infinite
;# It is recommended to set NbWriteQueues = 5
;# This section covers the parameters used by the Euronext Cash Market Data Feed Handler.
;# Defines the exchange start time. At that time, the Market Data Feed Handler plug-in connects to the exchange.
;# The time format is hhmmss.
;# range = 000000-235959
;# Defines the exchange closing time. At that time, the Market Data Feed Handler plug-in disconnects from the exchange.
;# The time format is hhmmss.
;# range = 000000-235959
;# Defines the time zone to be considered for StartTime and StopTime parameters.
;# If not specified then the server local time zone will be considered.
;# TimeZone is a data file located under the directory  /usr/share/zoneinfo/
;# For example: TimeZone = Europe/Paris means time zone data file /usr/share/zoneinfo/Europe/Paris
;# Defines the time at which the plug-in starts reading dictionary information.
;# range = 000000-235959
;# Defines whether the dictionary data is saved.
;# If this parameter equals 1 The dictionary database is saved at the location specified in the DictionaryPathName parameter, whenever the Market Data Server is shut down.
;# range = 0 or 1
;# Defines the directory path where the dictionary is stored.
;# If the path is not specified or invalid, the storing path is the default path ( DictionaryPathName = $(PATHMDS)/data )
;# Defines the number of days after which the Euronext Cash Market Data Feed Handler recycles the market data.
;# Defines whether the last trade time is disseminated with milliseconds. In this case the format becomes hhmmss.mmm (last three digits are milliseconds)
;# if UseMilliSecondTimestamp is set to 0, the trade time is disseminated with microseconds in format hhmmss.mmm���.
;# range = 0 or 1
;# Defines the queue size in megabytes that used for the communication between the Euronext Cash Market Data Feed Handler plug-in's threads.
;# Defines the size in MB of the receive buffer socket of the multicast UDP channels through which the Market Data Server receives real-time and snapshots data feed from Euronext.
;# This receive buffer is used by the system to hold data feed received from the peer exchange sending server until it is read by the Market Data Server.
;# The buffer cannot overflow if the peer exchange server is sending data that beyonds the buffer size window.
;# This means that datagrams will be discarded by the local receiver system if the exchange overwhelms the Market Data Server during peaks of data feed,
;# causing so gaps in data feed, that should be recovered.
;# To reduce the risk of generating gaps during peaks of data feed, it is recommended to set this parameter to 64 (64 MB).
;# This configuration takes effect, only if this parameter is less or equal to the maximum Linux TCP and UDP buffer sizes : rmem_max.
;# Otherwise, if this parameter SocketReadWindowSizeInMBytes is greater than rmem_max, the size of this buffer is the default Linux TCP and UDP buffer sizes : rmem_default.
;# The default maximum Linux TCP and UDP buffer sizes are way too small. You can find the actual values by typing the following commands that show the sizes in Bytes:
;# $ cat /proc/sys/net/core/rmem_max
;# $ cat /proc/sys/net/core/rmem_default
;# Now, to increase the maximum Linux TCP and UDP buffer sizes to 128 MB for example, or 134217728 Bytes, use the following command that requires root privileges:
;# $ /sbin/sysctl -w net.core.rmem_max=134217728
;# To make the change permanent, add or edit the following line in the /etc/sysctl.conf file, which is used during the boot process:
;# net.core.rmem_max=134217728
;# Defines the time interval in seconds after which the absence of exchange messages is considered as an inactivity on an exchange session, that  may be due to a network issue.
;# Defines the buffer size, in bytes, which is allocated to cache the real-time messages during the synchronization and market data replication.
;# The buffer is allocated for each pair of primary and secondary channels. The parameter specifies the number of messages,
;# which is used to calculate the buffer size as: Buffer Size = Number of messages * 1600 bytes
;# Defines the maximum number of Messages for OutOfSequence Mechanism, default value is calculated as half of MergerQueueSize
;# Defines the time-out, in seconds, that the OutOfSequence mechanism applies.
;# Defines the timeout for a gap detection in Seconds.
;# If this parameter MergerTimeOutInSeconds is defined, it is considered and the following parameters MergerTimeOutInMilliSeconds and MergerDefaultTimeOutInMicroSeconds are not considered.
;# Otherwise, if it is not defined, the value of the parameter MergerTimeOutInMilliSeconds is considered instead.
;# Defines the timeout for a gap detection in milliseconds.
;# If this parameter MergerTimeOutInMilliSeconds is defined and the previous parameter MergerTimeOutInSeconds is not defined, it is considered.
;# Otherwise, if the parameters MergerTimeOutInSeconds  and MergerTimeOutInMilliSeconds are not defined, the next parameter MergerDefaultTimeOutInMicroSeconds is considered instead.
;# Defines the Default timeout for a gap detection.
;# This parameter MergerDefaultTimeOutInMicroSeconds is considered only if none of the previous parameters MergerTimeOutInSeconds and MergerTimeOutInMilliSeconds is defined.
;# Defines if the Euronext Cash Market Data Feed Handler should ignore the intermediate gaps at timeout or not.
;# range = 0 or 1
;# Defines the threshold for an exchange reset. When the difference between the expected sequence number and the one received by the Euronext Cash Market Data Feed Handler,
;# is greater than the specified value, the Euronext Cash Market Data Feed Handler assumes that it is an exchange reset.
;# Defines whether the first gap is detected when the Euronext Cash Market Data Feed Handler starts.
;# If set to 0, first gap is not detected when the Euronext Cash Market Data Feed Handler starts.
;# range = 0 or 1
;# Defines the maximum number of Snapshot cycles after which the Market Data Feed Handler plug-in stops recovering and switches back to Real-time.
;# If the he Market Data Feed Handler plug-in detects a gap in a Snapshot during a recovery, it ignores the current snapshot and waits for the next Snapshot cycle.
;# In case where there is no complete Snapshot cycle without gaps, this parameter permits to limit the number of Snapshot cycles and so the time of recovery.
;# Defines the directory path where the XML standing data files are available
;# These files are made available on a daily basis by Euronext via HTTPS in XML machine-readable format.
;# Defines the directory path where the Cash Tick Size Referential file is available
;# This file is made available on a daily basis by Euronext via HTTPS in XML machine-readable format.
;# Defines the directory path where the Repo Settlement Price file is available.
;# This file is used to communicate the previous day settlement price for each repo instrument.
;# And it is made available on a daily basis by Euronext via HTTPS in XML machine-readable format.
;# Defines the path of the MDG SBE template file used to decode the exchange data feed
;# Defines whether to activate dumping the decoded exchange messages in the log file.
;# This parameter is for debugging purposes only. It saturates the log file and slow down the Market Data Feed Handler.
;# range = 0 or 1
;# Defines the path of the InstrumentStatus.csv file used to set the Suspension indicator (MR#13) and the Trading Phase (MR#140)
;# according to the MarketStatusChange messages (id: 1005)
;# Defines the path of the PlaceByMic.csv file used to set the Place
;# according to the MIC code
;# Defines the path of the PlaceByMic.csv file used to set the Market
;# according to the CFI code
;# Defines the path of the ForcedMarket.csv file used to set the Place and the Market
;# of instruments regardless of their MIC and CFI codes
;# Defines the path of the LinkedMnemo.csv that permits to clone an instrument on other Places and or other Markets
;# This section covers the settings for the exchange PAR
;# Defines whether to activate the Market Data Feed Handler plug-in for PAR exchange, place number 1.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange NTS
;# Defines whether to activate the Market Data Feed Handler plug-in for NTS exchange, place number 26.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange AEX
;# Defines whether to activate the Market Data Feed Handler plug-in for AEX exchange, place number 38.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange LISBO
;# Defines whether to activate the Market Data Feed Handler plug-in for LISBO exchange, place number 85.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange LUXE
;# Defines whether to activate the Market Data Feed Handler plug-in for LUXE exchange, place number 163.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange EURLN
;# Defines whether to activate the Market Data Feed Handler plug-in for EURLN exchange, place number 226.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange EURTR
;# Defines whether to activate the Market Data Feed Handler plug-in for EURTR exchange, place number 227.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange ISE
;# Defines whether to activate the Market Data Feed Handler plug-in for ISE exchange, place number 10.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange OB
;# Defines whether to activate the Market Data Feed Handler plug-in for OB exchange, place number 72.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the settings for the exchange OAXS
;# Defines whether to activate the Market Data Feed Handler plug-in for OAXS exchange, place number 173.
;# range = 0 or 1
;# Defines the number of channels in case of multi-channel sequenced feed
;# This parameter is meant to be used for sequencing on Market Data Server Relay with multi Market Data Server Core.
;# It is recommended to set NbChannel = 4
;# Defines the maximum levels of depth of "best limits plus" (MLP) for a financial product (of any market of the exchange) to display by the Euronext Cash Market Data Feed Handler.
;# MLP offers a number of best limits superior to simple ML, which offers only the 5 best limits.
;# It is recommended to set MaxLimitDepth = 20
;# Defines the time zone in which the Market Data Feed Handler disseminates times to its clients.
;# TimeZone should be a data file located under the directory  /usr/share/zoneinfo/. For example, if the TimeZone parameter is set to Europe/Paris,
;# the Market Data Feed Handler use the time zone data file /usr/share/zoneinfo/Europe/Paris
;# If the the time zone is not set, times are not converted by the Market Data Feed Handler,
;# and they are disseminated to clients as they are received from Euronext in UTC (Universal Time, Coordinated).
;# This section covers the multicast sessions that the Euronext Cash Market Data Feed Handler plug-in establishes with the exchange in order to receive real-time and snapshots data feed.
;# Defines a name for a thread handling a group of multicast sessions.
;# The sessions having the same ThreadGroup run in a single thread.
;# Defines the IP address of the primary local interface to use to subscribe to MulticastA channels
;# Defines the IP address of the secondary local interface to use to subscribe to MulticastB channels
;# If not set, InterfaceAddressA will be used for both MulticastA and MulticastB channels
;# Defines the list of MDGRoutingInfo of SetOfChannels (comma separated) of the real-time and snapshot channels to which the Market Data Server connects
;# MDGSetOfChannelsID is a unique number for the combination of Asset Class and Country Split
;# For example: SetOfChannelsIDs = 1, 2, 16, 17
;# means that the Market Data Server connects to Funds, Fixed Income, Commodity Cash and Currency Futures channels
;# Defines the bandwidth of the client network, depending on which the Market Data Server connects to the channel with the adequate ChannelSpeed.
;# range = 100M;1G;10G
